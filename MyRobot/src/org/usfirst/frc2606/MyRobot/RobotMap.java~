// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2606.MyRobot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainFrontLeft;
    public static SpeedController driveTrainRearLeft;
    public static SpeedControllerGroup driveTrainLeftDrive;
    public static SpeedController driveTrainFrontRight;
	public static SpeedController driveTrainRearRight;
    public static SpeedControllerGroup driveTrainRightDrive;
	public static DifferentialDrive driveTrainDifferentialDrive1;
    public static SpeedController wheelIntakeLeftWheel;
    public static SpeedController wheelIntakeRightWheel;
    public static SpeedController lifterSpeedController1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainFrontLeft = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "Front Left", (Talon) driveTrainFrontLeft);
        driveTrainFrontLeft.setInverted(false);
        driveTrainRearLeft = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "Rear Left", (Talon) driveTrainRearLeft);
        driveTrainRearLeft.setInverted(false);
        driveTrainLeftDrive = new SpeedControllerGroup(driveTrainFrontLeft, driveTrainRearLeft  );
        LiveWindow.addActuator("DriveTrain", "Left Drive", driveTrainLeftDrive);
        
        driveTrainFrontRight = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "Front Right", (Talon) driveTrainFrontRight);
        driveTrainFrontRight.setInverted(false);
        driveTrainRearRight = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "Rear Right", (Talon) driveTrainRearRight);
        driveTrainRearRight.setInverted(false);
        driveTrainRightDrive = new SpeedControllerGroup(driveTrainFrontRight, driveTrainRearRight  );
        LiveWindow.addActuator("DriveTrain", "Right Drive", driveTrainRightDrive);
        
        driveTrainDifferentialDrive1 = new DifferentialDrive(driveTrainLeftDrive, driveTrainRightDrive);
        LiveWindow.addActuator("DriveTrain", "Differential Drive 1", driveTrainDifferentialDrive1);
        driveTrainDifferentialDrive1.setSafetyEnabled(true);
        driveTrainDifferentialDrive1.setExpiration(0.1);
        driveTrainDifferentialDrive1.setMaxOutput(1.0);

        wheelIntakeLeftWheel = new Spark(4);
        LiveWindow.addActuator("WheelIntake", "Left Wheel", (Spark) wheelIntakeLeftWheel);
        wheelIntakeLeftWheel.setInverted(false);
        wheelIntakeRightWheel = new Spark(5);
        LiveWindow.addActuator("WheelIntake", "Right Wheel", (Spark) wheelIntakeRightWheel);
        wheelIntakeRightWheel.setInverted(true);
        lifterSpeedController1 = new Spark(6);
        LiveWindow.addActuator("Lifter", "Speed Controller 1", (Spark) lifterSpeedController1);
        lifterSpeedController1.setInverted(false);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
