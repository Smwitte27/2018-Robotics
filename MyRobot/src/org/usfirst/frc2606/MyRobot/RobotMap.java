// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2606.MyRobot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrain_SubsystemFrontLeft;
    public static SpeedController driveTrain_SubsystemRearLeft;
    public static SpeedControllerGroup driveTrain_SubsystemLeftDrive;
    public static SpeedController driveTrain_SubsystemFrontRight;
    public static SpeedController driveTrain_SubsystemRearRight;
    public static SpeedControllerGroup driveTrain_SubsystemRightDrive;
    public static DifferentialDrive driveTrain_SubsystemDifferentialDrive1;
    public static SpeedController wheelIntake_SubsystemLeftWheel;
    public static SpeedController wheelIntake_SubsystemRightWheel;
    public static SpeedController lifter_SubsystemSpeedController1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrain_SubsystemFrontLeft = new Talon(0);
        LiveWindow.addActuator("DriveTrain_Subsystem", "Front Left", (Talon) driveTrain_SubsystemFrontLeft);
        driveTrain_SubsystemFrontLeft.setInverted(false);
        driveTrain_SubsystemRearLeft = new Talon(1);
        LiveWindow.addActuator("DriveTrain_Subsystem", "Rear Left", (Talon) driveTrain_SubsystemRearLeft);
        driveTrain_SubsystemRearLeft.setInverted(false);
        driveTrain_SubsystemLeftDrive = new SpeedControllerGroup(driveTrain_SubsystemFrontLeft, driveTrain_SubsystemRearLeft  );
        LiveWindow.addActuator("DriveTrain_Subsystem", "Left Drive", driveTrain_SubsystemLeftDrive);
        
        driveTrain_SubsystemFrontRight = new Talon(2);
        LiveWindow.addActuator("DriveTrain_Subsystem", "Front Right", (Talon) driveTrain_SubsystemFrontRight);
        driveTrain_SubsystemFrontRight.setInverted(false);
        driveTrain_SubsystemRearRight = new Talon(3);
        LiveWindow.addActuator("DriveTrain_Subsystem", "Rear Right", (Talon) driveTrain_SubsystemRearRight);
        driveTrain_SubsystemRearRight.setInverted(false);
        driveTrain_SubsystemRightDrive = new SpeedControllerGroup(driveTrain_SubsystemFrontRight, driveTrain_SubsystemRearRight  );
        LiveWindow.addActuator("DriveTrain_Subsystem", "Right Drive", driveTrain_SubsystemRightDrive);
        
        driveTrain_SubsystemDifferentialDrive1 = new DifferentialDrive(driveTrain_SubsystemLeftDrive, driveTrain_SubsystemRightDrive);
        LiveWindow.addActuator("DriveTrain_Subsystem", "Differential Drive 1", driveTrain_SubsystemDifferentialDrive1);
        driveTrain_SubsystemDifferentialDrive1.setSafetyEnabled(true);
        driveTrain_SubsystemDifferentialDrive1.setExpiration(0.1);
        driveTrain_SubsystemDifferentialDrive1.setMaxOutput(1.0);

        wheelIntake_SubsystemLeftWheel = new Spark(4);
        LiveWindow.addActuator("WheelIntake_Subsystem", "Left Wheel", (Spark) wheelIntake_SubsystemLeftWheel);
        wheelIntake_SubsystemLeftWheel.setInverted(false);
        wheelIntake_SubsystemRightWheel = new Spark(5);
        LiveWindow.addActuator("WheelIntake_Subsystem", "Right Wheel", (Spark) wheelIntake_SubsystemRightWheel);
        wheelIntake_SubsystemRightWheel.setInverted(true);
        lifter_SubsystemSpeedController1 = new Spark(6);
        LiveWindow.addActuator("Lifter_Subsystem", "Speed Controller 1", (Spark) lifter_SubsystemSpeedController1);
        lifter_SubsystemSpeedController1.setInverted(false);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
